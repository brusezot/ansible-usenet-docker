---

- name: Create nginx folder
  file:
    path: "{{ nginx.config.directory }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0771"
  become: true

- name: Pull nginx image
  docker_container:
    name: "{{ nginx.name }}"
    image: linuxserver/letsencrypt
    state: started
    recreate: yes
    restart_policy: always
    networks:
      - name: "{{ docker.network }}"
    capabilities:
      - NET_ADMIN
    published_ports:
      - "{{ nginx.port.http }}:80"
      - "{{ nginx.port.https }}:443"
    volumes:
      - "{{ nginx.config.directory }}:/config"
    env:
      PUID: "{{ user.uid }}"
      PGID: "{{ user.gid }}"
      TZ: "{{ timezone }}"
      URL: "{{ letsencrypt.url }}"
      EXTRA_DOMAINS: "{{ letsencrypt.extra_domains }}"
      EMAIL: "{{ letsencrypt.email }}"
      VALIDATION: "{{ letsencrypt.validation }}"
      #STAGING: true

# All the confs to copy --------------------------------------------------------

- name: Copy Proxy configuration
  copy:
    src: proxy-settings.conf
    # Must be outside the site-conf folder
    dest: "{{ nginx.config.nginx }}/proxy-settings.conf"

- name: Copy usenet-services configuration
  template:
    src: usenet-services.conf.j2
    dest: "{{ nginx.config.conf }}/usenet-services.conf"

- name: Copy vms configuration
  template:
    src: vms.conf.j2
    dest: "{{ nginx.config.conf }}/vms.conf"

# Generate password 
- name: Generate htpasswd
  htpasswd:
    path: "{{ nginx.config.nginx }}/htpasswd"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0444
  become: true
  with_items:
    - "{{ httpauthusers }}"

- name: Restart nginx container
  docker_container:
    name: "{{ nginx.name }}"
    state: started
    restart: yes
