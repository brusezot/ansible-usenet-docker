---

- include: ubuntu.yml
  when: ansible_distribution == "Ubuntu"

- include: centos.yml
  when: ansible_distribution == "CentOS"

- name: Check if certificates already exist
  stat:
    path: "{{ nginx.certs.directory }}/config/live/{{ item }}/fullchain.pem"
  with_items:
    - "{{ nginx.vms.domain }}"
    - "{{ nginx.proxy.domain }}"
  register: check_certificates

# keep existing certs if they exist
- name: Run certbot for domains where cert don't exist
  command: "certbot certonly --webroot -w {{ nginx.config.directory }}/{{ item.item }} -d {{ item.item }} --config-dir {{ nginx.certs.directory }}/config --work-dir {{ nginx.certs.directory }}/work --logs-dir {{ nginx.certs.directory }}/logs  -m {{ letsencrypt.email }} --agree-tos --no-eff-email"
  with_items: "{{check_certificates.results}}"
  when: item.stat.exists == false

- name: Add certbot renewal to crontab
  cron:
    name: "Renew certs"
    minute: "0"
    hour: "12"
    state: present
    job: "certbot renew --config-dir {{ nginx.certs.directory }}/config --work-dir {{ nginx.certs.directory }}/work --logs-dir {{ nginx.certs.directory }}/logs"

# Redeploy NGINX templates now that SSL is ready
- name: Copy usenet-services configuration
  template:
    src: usenet-services.conf.j2
    dest: "{{ nginx.config.conf }}/usenet-services.conf"

- name: Copy vms configuration
  template:
    src: vms.conf.j2
    dest: "{{ nginx.config.conf }}/vms.conf"

- name: Restart NGINX container
  command: "docker restart {{ global.nginx.name }}"
