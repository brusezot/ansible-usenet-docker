---

- name: Delete NZBGet configuration (for fresh config)
  file:
    path: "{{ nzbget.config.directory }}/nzbget.conf"
    state: absent

- name: Pull and run NZBGet image
  docker_container:
    name: "{{ nzbget.name }}"
    image: "{{ nzbget.image }}"
    state: started
    recreate: yes
    restart_policy: unless-stopped
    networks:
      - name: "{{ docker.network }}"
    published_ports:
      - "{{ nzbget.port.http }}:{{ nzbget.port.http }}"
    volumes:
      - "{{ nzbget.config.directory }}:/config"
      - "{{ folders.downloads }}:/downloads"
    env:
      PUID: "{{ user.uid }}"
      PGID: "{{ user.gid }}"
      TZ: "{{ timezone }}"
    labels:
      traefik.frontend.rule: "Host:{{ nzbget.name }}.{{ global.domain }}"
      traefik.frontend.auth.basic: "{{ httpauthusers.calvin.name }}:{{ httpauthusers.calvin.password }},{{ httpauthusers.tammy.name }}:{{ httpauthusers.tammy.password }}"

- name: Wait for NZBGet to start successfully
  wait_for:
    timeout: 10
  delegate_to: localhost

- name: Stop NZBGet to change configuration
  docker_container:
    name: "{{ nzbget.name }}"
    state: stopped

- name: NZBGet configuration
  lineinfile:
    dest: "{{ nzbget.config.directory }}/nzbget.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
  - regexp: "^MainDir="
    line: "MainDir={{ nzbget.config.MainDir }}"
  - regexp: "^DestDir="
    line: "DestDir={{ nzbget.config.DestDir }}"
  - regexp: "^InterDir="
    line: "InterDir={{ nzbget.config.InterDir }}"
  - regexp: "^NzbDir="
    line: "NzbDir={{ nzbget.config.NzbDir }}"
  - regexp: "^QueueDir="
    line: "QueueDir={{ nzbget.config.QueueDir }}"
  - regexp: "^TempDir="
    line: "TempDir={{ nzbget.config.TempDir }}"
  - regexp: "^ScriptDir="
    line: "ScriptDir={{ nzbget.config.ScriptDir }}"
  - regexp: "^LockFile="
    line: "LockFile={{ nzbget.config.LockFile }}"
  - regexp: "^LogFile="
    line: "LogFile={{ nzbget.config.LogFile }}"
  - regexp: "^ControlUsername="
    line: "ControlUsername={{ nzbget.config.security.username }}"
  - regexp: "^ControlPassword="
    line: "ControlPassword={{ nzbget.config.security.password }}"
  - regexp: "^Category1.Name="
    line: "Category1.Name={{ nzbget.config.categories.one.name }}"
  - regexp: "^Category1.DestDir="
    line: "Category1.DestDir={{ nzbget.config.categories.one.destdir }}"
  - regexp: "^Category1.Unpack="
    line: "Category1.Unpack=yes"
  - regexp: "^Category1.Aliases="
    line: "Category1.Aliases={{ nzbget.config.categories.one.aliases }}"
  - regexp: "^Category2.Name="
    line: "Category2.Name={{ nzbget.config.categories.two.name }}"
  - regexp: "^Category2.DestDir="
    line: "Category2.DestDir={{ nzbget.config.categories.two.destdir }}"
  - regexp: "^Category2.Unpack="
    line: "Category2.Unpack=yes"
  - regexp: "^Category2.Aliases="
    line: "Category2.Aliases={{ nzbget.config.categories.two.aliases }}"
  - regexp: "^Category3.Name="
    line: "Category3.Name={{ nzbget.config.categories.three.name }}"
  - regexp: "^Category3.DestDir="
    line: "Category3.DestDir={{ nzbget.config.categories.three.destdir }}"
  - regexp: "^Category3.Unpack="
    line: "Category3.Unpack=yes"
  - regexp: "^Category3.Aliases="
    line: "Category3.Aliases={{ nzbget.config.categories.three.aliases }}"
  - regexp: "^DupeCheck="
    line: "DupeCheck={{ nzbget.config.incoming.dupecheck }}"
  - regexp: "^PostStrategy="
    line: "PostStrategy={{ nzbget.config.queue.poststrategy }}"
  - regexp: "^DownloadRate="
    line: "DownloadRate={{ nzbget.config.connection.downloadrate }}"
  - regexp: "^ParPauseQueue="
    line: "ParPauseQueue={{ nzbget.config.checkandrepair.parpausequeue }}"
  - regexp: "^UnpackPauseQueue="
    line: "UnpackPauseQueue={{ nzbget.config.unpack.unpackpausequeue }}"
  - regexp: "^ScriptPauseQueue="
    line: "ScriptPauseQueue={{ nzbget.config.script.scriptpausequeue }}"
  - regexp: "^DirectUnpack="
    line: "DirectUnpack={{ nzbget.config.unpack.directunpack }}"
  - regexp: "^DirectRename="
    line: "DirectRename={{ nzbget.config.checkandrepair.directrename }}"
  - regexp: "^ReorderFiles="
    line: "ReorderFiles={{ nzbget.config.queue.reorderfiles }}"

- name: Remove placeholder new-servers
  lineinfile:
    path: "{{ nzbget.config.directory }}/nzbget.conf"
    state: absent
    regexp: "{{ item }}"
  with_items:
  - "^Server1"

- name: Add news-servers by looping over hashes
  blockinfile:
    marker: "# {mark} Usenet Servers {{ item.key }}"
    dest: "{{ nzbget.config.directory }}/nzbget.conf"
    state: present
    block: |
      Server{{ item.key }}.Active={{ item.value.active }}
      Server{{ item.key }}.Name={{ item.value.name }}
      Server{{ item.key }}.Level={{ item.value.level }}
      Server{{ item.key }}.Optional={{ item.value.optional }}
      Server{{ item.key }}.Group={{ item.value.group }}
      Server{{ item.key }}.Host={{ item.value.host }}
      Server{{ item.key }}.Port={{ item.value.port }}
      Server{{ item.key }}.Username={{ item.value.username }}
      Server{{ item.key }}.Password={{ item.value.password }}
      Server{{ item.key }}.JoinGroup={{ item.value.joingroup }}
      Server{{ item.key }}.Encryption={{ item.value.encryption }}
      Server{{ item.key }}.Cipher={{ item.value.cipher }}
      Server{{ item.key }}.Connections={{ item.value.connections }}
      Server{{ item.key }}.Retention={{ item.value.retention }}
      Server{{ item.key }}.IpVersion={{ item.value.ipversion }}
  with_dict: "{{ nzbget.config.server }}"

- name: Restart NZBGet image
  docker_container:
    name: "{{ nzbget.name }}"
    state: started
    restart: yes

- name: Remove default folders
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - "{{ folders.downloads }}/nzb"
  - "{{ folders.downloads }}/queue"
  - "{{ folders.downloads }}/tmp"
  - "{{ folders.downloads }}/nzbget.log"
